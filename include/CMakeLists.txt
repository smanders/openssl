set(lib_name include)
########################################
# cmake-generate openssl/opensslconf.h
set(INSERT_WARNING
  "WARNING: do not edit!\n * Generated by CMakeLists.txt from include/openssl/opensslconf.h.cmake.in"
  )
##########
# ./configure; perl configdata.pm --dump
# Disable features
set(OPENSSL_DEFINES
  #OPENSSL_NO_COMP
  #OPENSSL_NO_MD2
  #OPENSSL_NO_RC5
  OPENSSL_THREADS
  OPENSSL_RAND_SEED_OS
  OPENSSL_NO_AFALGENG
  OPENSSL_NO_ASAN
  OPENSSL_NO_CRYPTO_MDEBUG
  OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE
  OPENSSL_NO_DEVCRYPTOENG
  OPENSSL_NO_EC_NISTP_64_GCC_128
  OPENSSL_NO_EGD
  OPENSSL_NO_EXTERNAL_TESTS
  OPENSSL_NO_FUZZ_AFL
  OPENSSL_NO_FUZZ_LIBFUZZER
  OPENSSL_NO_HEARTBEATS
  OPENSSL_NO_MSAN
  OPENSSL_NO_SCTP
  OPENSSL_NO_SSL_TRACE
  OPENSSL_NO_SSL3
  OPENSSL_NO_SSL3_METHOD
  OPENSSL_NO_UBSAN
  OPENSSL_NO_UNIT_TEST
  OPENSSL_NO_WEAK_SSL_CIPHERS
  #OPENSSL_NO_DYNAMIC_ENGINE
  OPENSSL_NO_STATIC_ENGINE
  )
foreach(def ${OPENSSL_DEFINES})
  set(INSERT_DEFINES "${INSERT_DEFINES}#ifndef ${def}\n# define ${def}\n#endif\n")
endforeach()
##########
if(CMAKE_SYSTEM_PROCESSOR STREQUAL i386)
  set(INSERT_I386 define)
else()
  set(INSERT_I386 undef)
endif()
##########
include(CheckIncludeFile)
check_include_file(unistd.h HAS_UNISTD_H_OSSL)
if(HAS_UNISTD_H_OSSL)
  set(INSERT_UNISTD <unistd.h>)
else()
  set(INSERT_UNISTD <unknown.h>)
endif()
##########
if(TRUE)
  set(INSERT_EXPORT_VAR_AS_FN undef)
  set(INSERT_BN_LLONG undef)
else()
  set(INSERT_EXPORT_VAR_AS_FN define)
  set(INSERT_BN_LLONG define)
endif()
##########
# only one for the following should be defined
# TRICKY matches crypto/bn_conf.h
if(WIN32)
  set(INSERT_SIXTY_FOUR_BIT_LONG undef)
  set(INSERT_SIXTY_FOUR_BIT define)
elseif(UNIX)
  set(INSERT_SIXTY_FOUR_BIT_LONG define)
  set(INSERT_SIXTY_FOUR_BIT undef)
endif()
set(INSERT_THIRTY_TWO_BIT undef)
##########
set(INSERT_RC4_INT "unsigned int")
##########
configure_file(openssl/opensslconf.h.cmake.in openssl/opensslconf.h @ONLY)
# copy root header to CMAKE_CURRENT_BINARY_DIR
configure_file(${CMAKE_SOURCE_DIR}/e_os.h e_os.h COPYONLY)
########################################
set(internal_srcs
  internal/bio.h
  internal/comp.h
  internal/conf.h
  internal/constant_time_locl.h
  internal/cryptlib.h
  internal/dane.h
  internal/__DECC_INCLUDE_EPILOGUE.H
  internal/__DECC_INCLUDE_PROLOGUE.H
  internal/dsoerr.h
  internal/dso.h
  internal/err.h
  internal/nelem.h
  internal/numbers.h
  internal/o_dir.h
  internal/o_str.h
  internal/refcount.h
  internal/sockets.h
  internal/sslconf.h
  internal/thread_once.h
  internal/tsan_assist.h
  ${CMAKE_CURRENT_BINARY_DIR}/e_os.h
  )
source_group(internal FILES ${internal_srcs})
list(APPEND ${lib_name}_libsrcs ${internal_srcs})
########################################
set(openssl_srcs
  openssl/aes.h
  openssl/asn1err.h
  openssl/asn1.h
  openssl/asn1_mac.h
  openssl/asn1t.h
  openssl/asyncerr.h
  openssl/async.h
  openssl/bioerr.h
  openssl/bio.h
  openssl/blowfish.h
  openssl/bnerr.h
  openssl/bn.h
  openssl/buffererr.h
  openssl/buffer.h
  openssl/camellia.h
  openssl/cast.h
  openssl/cmac.h
  openssl/cmserr.h
  openssl/cms.h
  openssl/comperr.h
  openssl/comp.h
  openssl/conf_api.h
  openssl/conferr.h
  openssl/conf.h
  openssl/cryptoerr.h
  openssl/crypto.h
  openssl/cterr.h
  openssl/ct.h
  openssl/__DECC_INCLUDE_EPILOGUE.H
  openssl/__DECC_INCLUDE_PROLOGUE.H
  openssl/des.h
  openssl/dherr.h
  openssl/dh.h
  openssl/dsaerr.h
  openssl/dsa.h
  openssl/dtls1.h
  openssl/ebcdic.h
  openssl/ecdh.h
  openssl/ecdsa.h
  openssl/ecerr.h
  openssl/ec.h
  openssl/engineerr.h
  openssl/engine.h
  openssl/e_os2.h
  openssl/err.h
  openssl/evperr.h
  openssl/evp.h
  openssl/hmac.h
  openssl/idea.h
  openssl/kdferr.h
  openssl/kdf.h
  openssl/lhash.h
  openssl/md2.h
  openssl/md4.h
  openssl/md5.h
  openssl/mdc2.h
  openssl/modes.h
  openssl/objectserr.h
  openssl/objects.h
  openssl/obj_mac.h
  openssl/ocsperr.h
  openssl/ocsp.h
  openssl/opensslconf.h.cmake.in
  openssl/opensslconf.h.in
  openssl/opensslv.h
  openssl/ossl_typ.h
  openssl/pem2.h
  openssl/pemerr.h
  openssl/pem.h
  openssl/pkcs12err.h
  openssl/pkcs12.h
  openssl/pkcs7err.h
  openssl/pkcs7.h
  openssl/rand_drbg.h
  openssl/randerr.h
  openssl/rand.h
  openssl/rc2.h
  openssl/rc4.h
  openssl/rc5.h
  openssl/ripemd.h
  openssl/rsaerr.h
  openssl/rsa.h
  openssl/safestack.h
  openssl/seed.h
  openssl/sha.h
  openssl/srp.h
  openssl/srtp.h
  openssl/ssl2.h
  openssl/ssl3.h
  openssl/sslerr.h
  openssl/ssl.h
  openssl/stack.h
  openssl/storeerr.h
  openssl/store.h
  openssl/symhacks.h
  openssl/tls1.h
  openssl/tserr.h
  openssl/ts.h
  openssl/txt_db.h
  openssl/uierr.h
  openssl/ui.h
  openssl/whrlpool.h
  openssl/x509err.h
  openssl/x509.h
  openssl/x509v3err.h
  openssl/x509v3.h
  openssl/x509_vfy.h
  ${CMAKE_CURRENT_BINARY_DIR}/openssl/opensslconf.h
  )
source_group(openssl FILES ${openssl_srcs})
list(APPEND ${lib_name}_libsrcs ${openssl_srcs})
########################################
add_library(${lib_name} INTERFACE)
if(FALSE)
# TODO: it appears cmake 3.13 has a fix for the target_sources() call to work
# https://cmake.org/pipermail/cmake/2016-July/063896.html
target_sources(${lib_name} INTERFACE ${${lib_name}_libsrcs})
else()
add_custom_target(${lib_name}Sources SOURCES ${${lib_name}_libsrcs})
endif()
target_include_directories(${lib_name} INTERFACE
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
  $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}> # e_os.h, openssl/opensslconf.h
  )
# don't install the following...
list(REMOVE_ITEM openssl_srcs
  openssl/__DECC_INCLUDE_EPILOGUE.H
  openssl/__DECC_INCLUDE_PROLOGUE.H
  openssl/opensslconf.h.cmake.in
  openssl/opensslconf.h.in
  )
install(FILES ${openssl_srcs} DESTINATION include${verDir}/${PROJECT_NAME})
########################################
list(APPEND ${lib_name}_libsrcs CMakeLists.txt)
list(REMOVE_ITEM ${lib_name}_libsrcs
  ${CMAKE_CURRENT_BINARY_DIR}/e_os.h
  ${CMAKE_CURRENT_BINARY_DIR}/openssl/opensslconf.h
  )
compareCmakeFilesys("${${lib_name}_libsrcs}")
