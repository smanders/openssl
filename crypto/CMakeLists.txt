set(lib_name crypto)
########################################
set(gen_file include/buildinf.h)
set(BUILDINF_PLATFORM ${CMAKE_SYSTEM_NAME})
if(DEFINED OPENSSL_VER) # passed in via externpro
  string(TIMESTAMP BUILDINF_DATE "%a %b %d %H:%M:%S %Y UTC" UTC)
else()
  string(TIMESTAMP BUILDINF_DATE "%a %b %d %Y UTC" UTC)
endif()
set(compilerFlags "compiler: ") #"${CMAKE_C_COMPILER} ${CMAKE_CXX_FLAGS}"
string(LENGTH ${compilerFlags} lenFlags)
math(EXPR maxPos ${lenFlags}-1)
foreach(pos RANGE ${maxPos})
  # Max 16 characters per line
  math(EXPR newLine ${pos}%16)
  if(newLine EQUAL 0)
    set(BUILDINF_COMPILER_FLAGS "${BUILDINF_COMPILER_FLAGS}\n    ")
  endif()
  string(SUBSTRING ${compilerFlags} ${pos} 1 char)
  set(BUILDINF_COMPILER_FLAGS "${BUILDINF_COMPILER_FLAGS}'${char}',")
endforeach()
set(BUILDINF_COMPILER_FLAGS "${BUILDINF_COMPILER_FLAGS}'\\0'")
configure_file(${gen_file}.cmake ${gen_file} @ONLY)
##########
set(conf_file include/internal/bn_conf.h)
set(INSERT_WARNING
  "/* WARNING: do not edit! */\n/* Generated by CMakeLists.txt from crypto/${conf_file}.cmake */"
  )
# only one for the following should be defined
set(INSERT_SIXTY_FOUR_BIT_LONG define)
set(INSERT_SIXTY_FOUR_BIT undef)
set(INSERT_THIRTY_TWO_BIT undef)
configure_file(${conf_file}.cmake ${conf_file} @ONLY)
##########
set(conf_file include/internal/dso_conf.h)
set(INSERT_WARNING
  "/* WARNING: do not edit! */\n/* Generated by CMakeLists.txt from crypto/${conf_file}.cmake */"
  )
if(WIN32)
  set(DSO_SCHEME_MACROS
    DSO_NONE
    )
elseif(UNIX)
  set(DSO_SCHEME_MACROS
    DSO_DLFCN
    HAVE_DLFCN_H
    )
endif()
foreach(mac ${DSO_SCHEME_MACROS})
  set(INSERT_DSO_SCHEME_MACROS "${INSERT_DSO_SCHEME_MACROS}\n# define ${mac}")
endforeach()
set(INSERT_DSO_EXTENSION ${CMAKE_SHARED_LIBRARY_SUFFIX})
configure_file(${conf_file}.cmake ${conf_file} @ONLY)
########################################
# root
set(root_srcs # order from crypto/build.info
  build.info
  cryptlib.c
  mem.c
  mem_dbg.c
  cversion.c
  ex_data.c
  cpt_err.c
  ebcdic.c
  uid.c
  o_time.c
  o_str.c
  o_dir.c
  o_fopen.c
  ctype.c
  threads_pthread.c
  threads_win.c
  threads_none.c
  getenv.c
  o_init.c
  o_fips.c
  mem_sec.c
  init.c
  mem_clr.c # cpuid_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group("" FILES ${root_srcs})
list(APPEND ${lib_name}_libsrcs ${root_srcs})
##########
set(root_extra # order from crypto/build.info EXTRA
  x86cpuid.pl
  x86_64cpuid.pl
  ia64cpuid.S
  ppccpuid.pl
  pariscid.pl
  alphacpuid.pl
  arm64cpuid.pl
  armv4cpuid.pl
  )
list(APPEND root_extra # in directory, not in build.info
  arm_arch.h
  armcap.c
  c64xpluscpuid.pl
  dllmain.c
  LPdir_nyi.c
  LPdir_unix.c
  LPdir_vms.c
  LPdir_win32.c
  LPdir_win.c
  LPdir_wince.c
  mips_arch.h
  ppc_arch.h
  ppccap.c
  s390x_arch.h
  s390xcap.c
  s390xcpuid.pl
  sparc_arch.h
  sparccpuid.S
  sparcv9cap.c
  vms_rms.h
  )
list(APPEND root_extra # cmake
  CMakeLists.txt
  )
list(APPEND ${lib_name}_all ${root_extra})
####################
# aes
set(aes_srcs # order from crypto/aes/build.info
  aes/build.info
  aes/aes_misc.c
  aes/aes_ecb.c
  aes/aes_cfb.c
  aes/aes_ofb.c
  aes/aes_ige.c
  aes/aes_wrap.c
  )
list(APPEND aes_srcs
  aes/aes_locl.h
  aes/aes_core.c # aes_asm_src DEFAULT (Configurations/00-base-templates.conf)
  aes/aes_cbc.c # aes_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(aes FILES ${aes_srcs})
list(APPEND ${lib_name}_libsrcs ${aes_srcs})
##########
set(aes_extra
  aes/aes_x86core.c
  )
list(APPEND aes_extra # TODO asm
  aes/asm/aes-armv4.pl
  aes/asm/aes-c64xplus.pl
  aes/asm/aesfx-sparcv9.pl
  aes/asm/aes-ia64.S
  aes/asm/aes-mips.pl
  aes/asm/aesni-mb-x86_64.pl
  aes/asm/aesni-sha1-x86_64.pl
  aes/asm/aesni-sha256-x86_64.pl
  aes/asm/aesni-x86_64.pl
  aes/asm/aesni-x86.pl
  aes/asm/aesp8-ppc.pl
  aes/asm/aes-parisc.pl
  aes/asm/aes-ppc.pl
  aes/asm/aes-s390x.pl
  aes/asm/aes-sparcv9.pl
  aes/asm/aest4-sparcv9.pl
  aes/asm/aesv8-armx.pl
  aes/asm/bsaes-armv7.pl
  aes/asm/vpaes-armv8.pl
  aes/asm/vpaes-ppc.pl
  aes/asm/vpaes-x86_64.pl
  aes/asm/vpaes-x86.pl
  )
list(APPEND ${lib_name}_all ${aes_extra})
####################
# aria
set(aria_srcs # order from crypto/aria/build.info
  aria/build.info
  aria/aria.c
  )
source_group(aria FILES ${aria_srcs})
list(APPEND ${lib_name}_libsrcs ${aria_srcs})
####################
# asn1
set(asn1_srcs # order from crypto/asn1/build.info
  asn1/build.info
  asn1/a_object.c
  asn1/a_bitstr.c
  asn1/a_utctm.c
  asn1/a_gentm.c
  asn1/a_time.c
  asn1/a_int.c
  asn1/a_octet.c
  asn1/a_print.c
  asn1/a_type.c
  asn1/a_dup.c
  asn1/a_d2i_fp.c
  asn1/a_i2d_fp.c
  asn1/a_utf8.c
  asn1/a_sign.c
  asn1/a_digest.c
  asn1/a_verify.c
  asn1/a_mbstr.c
  asn1/a_strex.c
  asn1/x_algor.c
  asn1/x_val.c
  asn1/x_sig.c
  asn1/x_bignum.c
  asn1/x_long.c
  asn1/x_int64.c
  asn1/x_info.c
  asn1/x_spki.c
  asn1/nsseq.c
  asn1/d2i_pu.c
  asn1/d2i_pr.c
  asn1/i2d_pu.c
  asn1/i2d_pr.c
  asn1/t_pkey.c
  asn1/t_spki.c
  asn1/t_bitst.c
  asn1/tasn_new.c
  asn1/tasn_fre.c
  asn1/tasn_enc.c
  asn1/tasn_dec.c
  asn1/tasn_utl.c
  asn1/tasn_typ.c
  asn1/tasn_prn.c
  asn1/tasn_scn.c
  asn1/ameth_lib.c
  asn1/f_int.c
  asn1/f_string.c
  asn1/n_pkey.c
  asn1/x_pkey.c
  asn1/bio_asn1.c
  asn1/bio_ndef.c
  asn1/asn_mime.c
  asn1/asn1_gen.c
  asn1/asn1_par.c
  asn1/asn1_lib.c
  asn1/asn1_err.c
  asn1/a_strnid.c
  asn1/evp_asn1.c
  asn1/asn_pack.c
  asn1/p5_pbe.c
  asn1/p5_pbev2.c
  asn1/p5_scrypt.c
  asn1/p8_pkey.c
  asn1/asn_moid.c
  asn1/asn_mstbl.c
  asn1/asn1_item_list.c
  )
list(APPEND asn1_srcs
  asn1/asn1_item_list.h
  asn1/asn1_locl.h
  asn1/charmap.h
  asn1/charmap.pl
  asn1/standard_methods.h
  asn1/tbl_standard.h
  )
source_group(asn1 FILES ${asn1_srcs})
list(APPEND ${lib_name}_libsrcs ${asn1_srcs})
####################
# async
set(async_srcs # order from crypto/async/build.info
  async/build.info
  async/async.c
  async/async_wait.c
  async/async_err.c
  )
list(APPEND async_srcs
  async/async_locl.h
  )
source_group(async FILES ${async_srcs})
##########
set(async_arch_srcs # order from crypto/async/build.info
  async/arch/async_posix.c
  async/arch/async_win.c
  async/arch/async_null.c
  )
list(APPEND async_arch_srcs
  async/arch/async_posix.h
  async/arch/async_win.h
  async/arch/async_null.h
  )
source_group(async\\arch FILES ${async_arch_srcs})
list(APPEND ${lib_name}_libsrcs ${async_srcs} ${async_arch_srcs})
####################
# bf
set(bf_srcs # order from crypto/bf/build.info
  bf/build.info
  bf/bf_skey.c
  bf/bf_ecb.c
  bf/bf_cfb64.c
  bf/bf_ofb64.c
  )
list(APPEND bf_srcs
  bf/bf_locl.h
  bf/bf_pi.h
  bf/bf_enc.c # bf_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(bf FILES ${bf_srcs})
list(APPEND ${lib_name}_libsrcs ${bf_srcs})
##########
set(bf_extra # TODO asm
  bf/asm/bf-586.pl
  )
list(APPEND ${lib_name}_all ${bf_extra})
####################
# bio
set(bio_srcs # order from crypto/bio/build.info
  bio/build.info
  bio/bio_lib.c
  bio/bio_cb.c
  bio/bio_err.c
  bio/bss_mem.c
  bio/bss_null.c
  bio/bss_fd.c
  bio/bss_file.c
  bio/bss_sock.c
  bio/bss_conn.c
  bio/bf_null.c
  bio/bf_buff.c
  bio/b_print.c
  bio/b_dump.c
  bio/b_addr.c
  bio/b_sock.c
  bio/b_sock2.c
  bio/bss_acpt.c
  bio/bf_nbio.c
  bio/bss_log.c
  bio/bss_bio.c
  bio/bss_dgram.c
  bio/bio_meth.c
  bio/bf_lbuf.c
  )
list(APPEND bio_srcs
  bio/bio_lcl.h
  )
source_group(bio FILES ${bio_srcs})
list(APPEND ${lib_name}_libsrcs ${bio_srcs})
####################
# blake2
set(blake2_srcs # order from crypto/blake2/build.info
  blake2/build.info
  blake2/blake2b.c
  blake2/blake2s.c
  blake2/m_blake2b.c
  blake2/m_blake2s.c
  )
list(APPEND blake2_srcs
  blake2/blake2_impl.h
  blake2/blake2_locl.h
  )
source_group(blake2 FILES ${blake2_srcs})
list(APPEND ${lib_name}_libsrcs ${blake2_srcs})
####################
# bn
set(bn_srcs # order from crypto/bn/build.info
  bn/build.info
  bn/bn_add.c
  bn/bn_div.c
  bn/bn_exp.c
  bn/bn_lib.c
  bn/bn_ctx.c
  bn/bn_mul.c
  bn/bn_mod.c
  bn/bn_print.c
  bn/bn_rand.c
  bn/bn_shift.c
  bn/bn_word.c
  bn/bn_blind.c
  bn/bn_kron.c
  bn/bn_sqrt.c
  bn/bn_gcd.c
  bn/bn_prime.c
  bn/bn_err.c
  bn/bn_sqr.c
  bn/bn_recp.c
  bn/bn_mont.c
  bn/bn_mpi.c
  bn/bn_exp2.c
  bn/bn_gf2m.c
  bn/bn_nist.c
  bn/bn_depr.c
  bn/bn_const.c
  bn/bn_x931p.c
  bn/bn_intern.c
  bn/bn_dh.c
  bn/bn_srp.c
  )
list(APPEND bn_srcs
  bn/bn_lcl.h
  bn/bn_prime.h
  bn/bn_asm.c # bn_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(bn FILES ${bn_srcs})
list(APPEND ${lib_name}_libsrcs ${bn_srcs})
##########
set(bn_extra # in directory, not in build.info
  bn/bn_prime.pl
  bn/README.pod
  bn/rsaz_exp.c
  bn/rsaz_exp.h
  )
list(APPEND bn_extra # TODO asm
  bn/asm/alpha-mont.pl
  bn/asm/armv4-gf2m.pl
  bn/asm/armv4-mont.pl
  bn/asm/armv8-mont.pl
  bn/asm/bn-586.pl
  bn/asm/bn-c64xplus.asm
  bn/asm/c64xplus-gf2m.pl
  bn/asm/co-586.pl
  bn/asm/ia64-mont.pl
  bn/asm/ia64.S
  bn/asm/mips-mont.pl
  bn/asm/mips.pl
  bn/asm/parisc-mont.pl
  bn/asm/ppc64-mont.pl
  bn/asm/ppc-mont.pl
  bn/asm/ppc.pl
  bn/asm/rsaz-avx2.pl
  bn/asm/rsaz-x86_64.pl
  bn/asm/s390x-gf2m.pl
  bn/asm/s390x-mont.pl
  bn/asm/s390x.S
  bn/asm/sparct4-mont.pl
  bn/asm/sparcv8plus.S
  bn/asm/sparcv8.S
  bn/asm/sparcv9a-mont.pl
  bn/asm/sparcv9-gf2m.pl
  bn/asm/sparcv9-mont.pl
  bn/asm/via-mont.pl
  bn/asm/vis3-mont.pl
  bn/asm/x86_64-gcc.c
  bn/asm/x86_64-gf2m.pl
  bn/asm/x86_64-mont5.pl
  bn/asm/x86_64-mont.pl
  bn/asm/x86-gf2m.pl
  bn/asm/x86-mont.pl
  )
list(APPEND ${lib_name}_all ${bn_extra})
####################
# buffer
set(buffer_srcs # order from crypto/buffer/build.info
  buffer/build.info
  buffer/buffer.c
  buffer/buf_err.c
  )
source_group(buffer FILES ${buffer_srcs})
list(APPEND ${lib_name}_libsrcs ${buffer_srcs})
####################
# camellia
set(camellia_srcs # order from crypto/camellia/build.info
  camellia/build.info
  camellia/cmll_ecb.c
  camellia/cmll_ofb.c
  camellia/cmll_cfb.c
  camellia/cmll_ctr.c
  )
list(APPEND camellia_srcs
  camellia/cmll_locl.h
  camellia/camellia.c # cmll_asm_src DEFAULT (Configurations/00-base-templates.conf)
  camellia/cmll_misc.c # cmll_asm_src DEFAULT (Configurations/00-base-templates.conf)
  camellia/cmll_cbc.c # cmll_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(camellia FILES ${camellia_srcs})
list(APPEND ${lib_name}_libsrcs ${camellia_srcs})
##########
set(camellia_extra # TODO asm
  camellia/asm/cmllt4-sparcv9.pl
  camellia/asm/cmll-x86_64.pl
  camellia/asm/cmll-x86.pl
  )
list(APPEND ${lib_name}_all ${camellia_extra})
####################
# cast
set(cast_srcs # order from crypto/cast/build.info
  cast/build.info
  cast/c_skey.c
  cast/c_ecb.c
  cast/c_cfb64.c
  cast/c_ofb64.c
  )
list(APPEND cast_srcs
  cast/cast_lcl.h
  cast/cast_s.h
  cast/c_enc.c # cast_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(cast FILES ${cast_srcs})
list(APPEND ${lib_name}_libsrcs ${cast_srcs})
##########
set(cast_extra # TODO asm
  cast/asm/cast-586.pl
  )
list(APPEND ${lib_name}_all ${cast_extra})
####################
# chacha
set(chacha_srcs # order from crypto/chacha/build.info
  chacha/build.info
  chacha/chacha_enc.c # chacha_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(chacha FILES ${chacha_srcs})
list(APPEND ${lib_name}_libsrcs ${chacha_srcs})
##########
set(chacha_extra # TODO asm
  chacha/asm/chacha-armv4.pl
  chacha/asm/chacha-armv8.pl
  chacha/asm/chacha-c64xplus.pl
  chacha/asm/chacha-ppc.pl
  chacha/asm/chacha-s390x.pl
  chacha/asm/chacha-x86_64.pl
  chacha/asm/chacha-x86.pl
  )
list(APPEND ${lib_name}_all ${chacha_extra})
####################
# cmac
set(cmac_srcs # order from crypto/cmac/build.info
  cmac/build.info
  cmac/cmac.c
  cmac/cm_ameth.c
  cmac/cm_pmeth.c
  )
source_group(cmac FILES ${cmac_srcs})
list(APPEND ${lib_name}_libsrcs ${cmac_srcs})
####################
# cms
set(cms_srcs # order from crypto/cms/build.info
  cms/build.info
  cms/cms_lib.c
  cms/cms_asn1.c
  cms/cms_att.c
  cms/cms_io.c
  cms/cms_smime.c
  cms/cms_err.c
  cms/cms_sd.c
  cms/cms_dd.c
  cms/cms_cd.c
  cms/cms_env.c
  cms/cms_enc.c
  cms/cms_ess.c
  cms/cms_pwri.c
  cms/cms_kari.c
  )
list(APPEND cms_srcs
  cms/cms_lcl.h
  )
source_group(cms FILES ${cms_srcs})
list(APPEND ${lib_name}_libsrcs ${cms_srcs})
####################
# comp
set(comp_srcs # order from crypto/comp/build.info
  comp/build.info
  comp/comp_lib.c
  comp/comp_err.c
  comp/c_zlib.c
  )
list(APPEND comp_srcs
  comp/comp_lcl.h
  )
source_group(comp FILES ${comp_srcs})
list(APPEND ${lib_name}_libsrcs ${comp_srcs})
####################
# conf
set(conf_srcs # order from crypto/conf/build.info
  conf/build.info
  conf/conf_err.c
  conf/conf_lib.c
  conf/conf_api.c
  conf/conf_def.c
  conf/conf_mod.c
  conf/conf_mall.c
  conf/conf_sap.c
  conf/conf_ssl.c
  )
list(APPEND conf_srcs
  conf/conf_def.h
  conf/conf_lcl.h
  conf/keysets.pl
  )
source_group(conf FILES ${conf_srcs})
list(APPEND ${lib_name}_libsrcs ${conf_srcs})
####################
# ct
set(ct_srcs # order from crypto/ct/build.info
  ct/build.info
  ct/ct_b64.c
  ct/ct_err.c
  ct/ct_log.c
  ct/ct_oct.c
  ct/ct_policy.c
  ct/ct_prn.c
  ct/ct_sct.c
  ct/ct_sct_ctx.c
  ct/ct_vfy.c
  ct/ct_x509v3.c
  )
list(APPEND ct_srcs
  ct/ct_locl.h
  )
source_group(ct FILES ${ct_srcs})
list(APPEND ${lib_name}_libsrcs ${ct_srcs})
####################
# des
set(des_srcs # order from crypto/des/build.info
  des/build.info
  des/set_key.c
  des/ecb_enc.c
  des/cbc_enc.c
  des/ecb3_enc.c
  des/cfb64enc.c
  des/cfb64ede.c
  des/cfb_enc.c
  des/ofb64ede.c
  des/ofb64enc.c
  des/ofb_enc.c
  des/str2key.c
  des/pcbc_enc.c
  des/qud_cksm.c
  des/rand_key.c
  des/fcrypt.c
  des/xcbc_enc.c
  des/cbc_cksm.c
  )
list(APPEND des_srcs
  des/des_locl.h
  des/spr.h
  des/des_enc.c # des_asm_src DEFAULT (Configurations/00-base-templates.conf)
  des/fcrypt_b.c # des_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(des FILES ${des_srcs})
list(APPEND ${lib_name}_libsrcs ${des_srcs})
##########
set(des_extra # in directory, not in build.info
  des/ncbc_enc.c
  )
list(APPEND des_extra # TODO asm
  des/asm/crypt586.pl
  des/asm/des-586.pl
  des/asm/desboth.pl
  des/asm/des_enc.m4
  des/asm/dest4-sparcv9.pl
  )
list(APPEND ${lib_name}_all ${des_extra})
####################
# dh
set(dh_srcs # order from crypto/dh/build.info
  dh/build.info
  dh/dh_asn1.c
  dh/dh_gen.c
  dh/dh_key.c
  dh/dh_lib.c
  dh/dh_check.c
  dh/dh_err.c
  dh/dh_depr.c
  dh/dh_ameth.c
  dh/dh_pmeth.c
  dh/dh_prn.c
  dh/dh_rfc5114.c
  dh/dh_kdf.c
  dh/dh_meth.c
  dh/dh_rfc7919.c
  )
list(APPEND dh_srcs
  dh/dh_locl.h
  dh/dh1024.pem
  dh/dh192.pem
  dh/dh2048.pem
  dh/dh4096.pem
  dh/dh512.pem
  )
source_group(dh FILES ${dh_srcs})
list(APPEND ${lib_name}_libsrcs ${dh_srcs})
####################
# dsa
set(dsa_srcs # order from crypto/dsa/build.info
  dsa/build.info
  dsa/dsa_gen.c
  dsa/dsa_key.c
  dsa/dsa_lib.c
  dsa/dsa_asn1.c
  dsa/dsa_vrf.c
  dsa/dsa_sign.c
  dsa/dsa_err.c
  dsa/dsa_ossl.c
  dsa/dsa_depr.c
  dsa/dsa_ameth.c
  dsa/dsa_pmeth.c
  dsa/dsa_prn.c
  dsa/dsa_meth.c
  )
list(APPEND dsa_srcs
  dsa/dsa_locl.h
  )
source_group(dsa FILES ${dsa_srcs})
list(APPEND ${lib_name}_libsrcs ${dsa_srcs})
####################
# dso
set(dso_srcs # order from crypto/dso/build.info
  dso/build.info
  dso/dso_dl.c
  dso/dso_dlfcn.c
  dso/dso_err.c
  dso/dso_lib.c
  dso/dso_openssl.c
  dso/dso_win32.c
  dso/dso_vms.c
  )
list(APPEND dso_srcs
  dso/dso_locl.h
  )
source_group(dso FILES ${dso_srcs})
list(APPEND ${lib_name}_libsrcs ${dso_srcs})
####################
# ec
set(ec_srcs # order from crypto/ec/build.info
  ec/build.info
  ec/ec_lib.c
  ec/ecp_smpl.c
  ec/ecp_mont.c
  ec/ecp_nist.c
  ec/ec_cvt.c
  ec/ec_mult.c
  ec/ec_err.c
  ec/ec_curve.c
  ec/ec_check.c
  ec/ec_print.c
  ec/ec_asn1.c
  ec/ec_key.c
  ec/ec2_smpl.c
  ec/ec_ameth.c
  ec/ec_pmeth.c
  ec/eck_prn.c
  ec/ecp_nistp224.c
  ec/ecp_nistp256.c
  ec/ecp_nistp521.c
  ec/ecp_nistputil.c
  ec/ecp_oct.c
  ec/ec2_oct.c
  ec/ec_oct.c
  ec/ec_kmeth.c
  ec/ecdh_ossl.c
  ec/ecdh_kdf.c
  ec/ecdsa_ossl.c
  ec/ecdsa_sign.c
  ec/ecdsa_vrf.c
  ec/curve25519.c
  ec/ecx_meth.c
  )
list(APPEND ec_srcs
  ec/ec_lcl.h
  )
source_group(ec FILES ${ec_srcs})
####
set(ec_curve448_srcs # order from crypto/ec/build.info
  ec/curve448/f_generic.c
  ec/curve448/scalar.c
  ec/curve448/curve448_tables.c
  ec/curve448/eddsa.c
  ec/curve448/curve448.c
  )
list(APPEND ec_curve448_srcs
  ec/curve448/curve448_lcl.h
  ec/curve448/curve448utils.h
  ec/curve448/ed448.h
  ec/curve448/field.h
  ec/curve448/point_448.h
  ec/curve448/word.h
  )
source_group(ec\\curve448 FILES ${ec_curve448_srcs})
list(APPEND ec_srcs ${ec_curve448_srcs})
####
set(ec_curve448_arch_32_srcs
  ec/curve448/arch_32/f_impl.c
  )
list(APPEND ec_curve448_arch_32_srcs
  ec/curve448/arch_32/arch_intrinsics.h
  ec/curve448/arch_32/f_impl.h
  )
source_group(ec\\curve448\\arch_32 FILES ${ec_curve448_arch_32_srcs})
list(APPEND ec_srcs ${ec_curve448_arch_32_srcs})
list(APPEND ${lib_name}_libsrcs ${ec_srcs})
##########
set(ec_extra # in directory, not in build.info
  ec/ecp_nistz256.c
  ec/ecp_nistz256_table.c
  )
list(APPEND ec_extra # TODO asm
  ec/asm/ecp_nistz256-armv4.pl
  ec/asm/ecp_nistz256-armv8.pl
  ec/asm/ecp_nistz256-avx2.pl
  ec/asm/ecp_nistz256-ppc64.pl
  ec/asm/ecp_nistz256-sparcv9.pl
  ec/asm/ecp_nistz256-x86_64.pl
  ec/asm/ecp_nistz256-x86.pl
  ec/asm/x25519-ppc64.pl
  ec/asm/x25519-x86_64.pl
  )
list(APPEND ${lib_name}_all ${ec_extra})
####################
# engine
set(engine_srcs # order from crypto/engine/build.info
  engine/build.info
  engine/eng_err.c
  engine/eng_lib.c
  engine/eng_list.c
  engine/eng_init.c
  engine/eng_ctrl.c
  engine/eng_table.c
  engine/eng_pkey.c
  engine/eng_fat.c
  engine/eng_all.c
  engine/tb_rsa.c
  engine/tb_dsa.c
  engine/tb_dh.c
  engine/tb_rand.c
  engine/tb_cipher.c
  engine/tb_digest.c
  engine/tb_pkmeth.c
  engine/tb_asnmth.c
  engine/tb_eckey.c
  engine/eng_openssl.c
  engine/eng_cnf.c
  engine/eng_dyn.c
  engine/eng_rdrand.c
  )
list(APPEND engine_srcs
  engine/eng_int.h
  engine/README
  )
source_group(engine FILES ${engine_srcs})
list(APPEND ${lib_name}_libsrcs ${engine_srcs})
##########
set(engine_extra # in directory, not in build.info
  engine/eng_devcrypto.c # TODO determine if part of library
  )
list(APPEND ${lib_name}_all ${engine_extra})
####################
# err
set(err_srcs # order from crypto/err/build.info
  err/build.info
  err/err.c
  err/err_all.c
  err/err_prn.c
  )
list(APPEND err_srcs
  err/openssl.ec
  err/openssl.txt
  err/README
  )
source_group(err FILES ${err_srcs})
list(APPEND ${lib_name}_libsrcs ${err_srcs})
####################
# evp
set(evp_srcs # order from crypto/evp/build.info
  evp/build.info
  evp/encode.c
  evp/digest.c
  evp/evp_enc.c
  evp/evp_key.c
  evp/evp_cnf.c
  evp/e_des.c
  evp/e_bf.c
  evp/e_idea.c
  evp/e_des3.c
  evp/e_camellia.c
  evp/e_rc4.c
  evp/e_aes.c
  evp/names.c
  evp/e_seed.c
  evp/e_aria.c
  evp/e_sm4.c
  evp/e_xcbc_d.c
  evp/e_rc2.c
  evp/e_cast.c
  evp/e_rc5.c
  evp/m_null.c
  evp/m_md2.c
  evp/m_md4.c
  evp/m_md5.c
  evp/m_sha1.c
  evp/m_wp.c
  evp/m_md5_sha1.c
  evp/m_mdc2.c
  evp/m_ripemd.c
  evp/m_sha3.c
  evp/p_open.c
  evp/p_seal.c
  evp/p_sign.c
  evp/p_verify.c
  evp/p_lib.c
  evp/p_enc.c
  evp/p_dec.c
  evp/bio_md.c
  evp/bio_b64.c
  evp/bio_enc.c
  evp/evp_err.c
  evp/e_null.c
  evp/c_allc.c
  evp/c_alld.c
  evp/evp_lib.c
  evp/bio_ok.c
  evp/evp_pkey.c
  evp/evp_pbe.c
  evp/p5_crpt.c
  evp/p5_crpt2.c
  evp/pbe_scrypt.c
  evp/e_old.c
  evp/pmeth_lib.c
  evp/pmeth_fn.c
  evp/pmeth_gn.c
  evp/m_sigver.c
  evp/e_aes_cbc_hmac_sha1.c
  evp/e_aes_cbc_hmac_sha256.c
  evp/e_rc4_hmac_md5.c
  evp/e_chacha20_poly1305.c
  evp/cmeth_lib.c
  )
list(APPEND evp_srcs
  evp/evp_locl.h
  )
source_group(evp FILES ${evp_srcs})
list(APPEND ${lib_name}_libsrcs ${evp_srcs})
####################
# hmac
set(hmac_srcs # order from crypto/hmac/build.info
  hmac/build.info
  hmac/hmac.c
  hmac/hm_ameth.c
  hmac/hm_pmeth.c
  )
list(APPEND hmac_srcs
  hmac/hmac_lcl.h
  )
source_group(hmac FILES ${hmac_srcs})
list(APPEND ${lib_name}_libsrcs ${hmac_srcs})
####################
# idea
set(idea_srcs # order from crypto/idea/build.info
  idea/build.info
  idea/i_cbc.c
  idea/i_cfb64.c
  idea/i_ofb64.c
  idea/i_ecb.c
  idea/i_skey.c
  )
list(APPEND idea_srcs
  idea/idea_lcl.h
  )
source_group(idea FILES ${idea_srcs})
list(APPEND ${lib_name}_libsrcs ${idea_srcs})
####################
set(include_srcs
  include/buildinf.h.cmake
  ${CMAKE_CURRENT_BINARY_DIR}/include/buildinf.h
  )
source_group(include FILES ${include_srcs})
list(APPEND ${lib_name}_libsrcs ${include_srcs})
##########
set(include_internal_srcs
  include/internal/aria.h
  include/internal/asn1_int.h
  include/internal/async.h
  include/internal/bn_conf.h.cmake
  include/internal/bn_conf.h.in
  include/internal/bn_dh.h
  include/internal/bn_int.h
  include/internal/bn_srp.h
  include/internal/chacha.h
  include/internal/cryptlib_int.h
  include/internal/ctype.h
  include/internal/__DECC_INCLUDE_EPILOGUE.H
  include/internal/__DECC_INCLUDE_PROLOGUE.H
  include/internal/dso_conf.h.cmake
  include/internal/dso_conf.h.in
  include/internal/ec_int.h
  include/internal/engine.h
  include/internal/err_int.h
  include/internal/evp_int.h
  include/internal/lhash.h
  include/internal/md32_common.h
  include/internal/objects.h
  include/internal/poly1305.h
  include/internal/rand_int.h
  include/internal/sha.h
  include/internal/siphash.h
  include/internal/sm2err.h
  include/internal/sm2.h
  include/internal/sm3.h
  include/internal/sm4.h
  include/internal/store.h
  include/internal/store_int.h
  include/internal/x509_int.h
  ${CMAKE_CURRENT_BINARY_DIR}/include/internal/bn_conf.h
  ${CMAKE_CURRENT_BINARY_DIR}/include/internal/dso_conf.h
  )
source_group(include\\internal FILES ${include_internal_srcs})
list(APPEND ${lib_name}_libsrcs ${include_internal_srcs})
####################
# kdf
set(kdf_srcs # order from crypto/kdf/build.info
  kdf/build.info
  kdf/tls1_prf.c
  kdf/kdf_err.c
  kdf/hkdf.c
  kdf/scrypt.c
  )
source_group(kdf FILES ${kdf_srcs})
list(APPEND ${lib_name}_libsrcs ${kdf_srcs})
####################
# lhash
set(lhash_srcs # order from crypto/lhash/build.info
  lhash/build.info
  lhash/lhash.c
  lhash/lh_stats.c
  )
list(APPEND lhash_srcs
  lhash/lhash_lcl.h
  )
source_group(lhash FILES ${lhash_srcs})
list(APPEND ${lib_name}_libsrcs ${lhash_srcs})
####################
# md2
set(md2_srcs # order from crypto/md2/build.info
  md2/build.info
  md2/md2_dgst.c
  md2/md2_one.c
  )
source_group(md2 FILES ${md2_srcs})
list(APPEND ${lib_name}_libsrcs ${md2_srcs})
####################
# md4
set(md4_srcs # order from crypto/md4/build.info
  md4/build.info
  md4/md4_dgst.c
  md4/md4_one.c
  )
list(APPEND md4_srcs
  md4/md4_locl.h
  )
source_group(md4 FILES ${md4_srcs})
list(APPEND ${lib_name}_libsrcs ${md4_srcs})
####################
# md5
set(md5_srcs # order from crypto/md5/build.info
  md5/build.info
  md5/md5_dgst.c
  md5/md5_one.c
  )
list(APPEND md5_srcs
  md5/md5_locl.h
  )
source_group(md5 FILES ${md5_srcs})
list(APPEND ${lib_name}_libsrcs ${md5_srcs})
##########
set(md5_extra # TODO asm
  md5/asm/md5-586.pl
  md5/asm/md5-sparcv9.pl
  md5/asm/md5-x86_64.pl
  )
list(APPEND ${lib_name}_all ${md5_extra})
####################
# mdc2
set(mdc2_srcs # order from crypto/mdc2/build.info
  mdc2/build.info
  mdc2/mdc2dgst.c
  mdc2/mdc2_one.c
  )
source_group(mdc2 FILES ${mdc2_srcs})
list(APPEND ${lib_name}_libsrcs ${mdc2_srcs})
####################
# modes
set(modes_srcs # order from crypto/modes/build.info
  modes/build.info
  modes/cbc128.c
  modes/ctr128.c
  modes/cts128.c
  modes/cfb128.c
  modes/ofb128.c
  modes/gcm128.c
  modes/ccm128.c
  modes/xts128.c
  modes/wrap128.c
  modes/ocb128.c
  )
list(APPEND modes_srcs
  modes/modes_lcl.h
  )
source_group(modes FILES ${modes_srcs})
list(APPEND ${lib_name}_libsrcs ${modes_srcs})
##########
set(modes_extra # TODO asm
  modes/asm/aesni-gcm-x86_64.pl
  modes/asm/ghash-alpha.pl
  modes/asm/ghash-armv4.pl
  modes/asm/ghash-c64xplus.pl
  modes/asm/ghash-ia64.pl
  modes/asm/ghashp8-ppc.pl
  modes/asm/ghash-parisc.pl
  modes/asm/ghash-s390x.pl
  modes/asm/ghash-sparcv9.pl
  modes/asm/ghashv8-armx.pl
  modes/asm/ghash-x86_64.pl
  modes/asm/ghash-x86.pl
  )
list(APPEND ${lib_name}_all ${modes_extra})
####################
# objects
set(objects_srcs # order from crypto/objects/build.info
  objects/build.info
  objects/o_names.c
  objects/obj_dat.c
  objects/obj_lib.c
  objects/obj_err.c
  objects/obj_xref.c
  )
list(APPEND objects_srcs
  objects/obj_dat.h
  objects/obj_lcl.h
  objects/obj_xref.h
  objects/obj_dat.pl
  objects/objects.pl
  objects/objxref.pl
  objects/objects.txt
  objects/obj_xref.txt
  objects/obj_mac.num
  objects/README
  )
source_group(objects FILES ${objects_srcs})
list(APPEND ${lib_name}_libsrcs ${objects_srcs})
####################
# ocsp
set(ocsp_srcs # order from crypto/ocsp/build.info
  ocsp/build.info
  ocsp/ocsp_asn.c
  ocsp/ocsp_ext.c
  ocsp/ocsp_ht.c
  ocsp/ocsp_lib.c
  ocsp/ocsp_cl.c
  ocsp/ocsp_srv.c
  ocsp/ocsp_prn.c
  ocsp/ocsp_vfy.c
  ocsp/ocsp_err.c
  ocsp/v3_ocsp.c
  )
list(APPEND ocsp_srcs
  ocsp/ocsp_lcl.h
  )
source_group(ocsp FILES ${ocsp_srcs})
list(APPEND ${lib_name}_libsrcs ${ocsp_srcs})
####################
# pem
set(pem_srcs # order from crypto/pem/build.info
  pem/build.info
  pem/pem_sign.c
  pem/pem_info.c
  pem/pem_lib.c
  pem/pem_all.c
  pem/pem_err.c
  pem/pem_x509.c
  pem/pem_xaux.c
  pem/pem_oth.c
  pem/pem_pk8.c
  pem/pem_pkey.c
  pem/pvkfmt.c
  )
source_group(pem FILES ${pem_srcs})
list(APPEND ${lib_name}_libsrcs ${pem_srcs})
####################
# perlasm
set(perlasm_srcs # no build.info in directory
  perlasm/arm-xlate.pl
  perlasm/cbc.pl
  perlasm/ppc-xlate.pl
  perlasm/README
  perlasm/sparcv9_modes.pl
  perlasm/x86_64-xlate.pl
  perlasm/x86asm.pl
  perlasm/x86gas.pl
  perlasm/x86masm.pl
  perlasm/x86nasm.pl
  )
source_group(perlasm FILES ${perlasm_srcs})
list(APPEND ${lib_name}_libsrcs ${perlasm_srcs})
####################
# pkcs12
set(pkcs12_srcs # order from crypto/pkcs12/build.info
  pkcs12/build.info
  pkcs12/p12_add.c
  pkcs12/p12_asn.c
  pkcs12/p12_attr.c
  pkcs12/p12_crpt.c
  pkcs12/p12_crt.c
  pkcs12/p12_decr.c
  pkcs12/p12_init.c
  pkcs12/p12_key.c
  pkcs12/p12_kiss.c
  pkcs12/p12_mutl.c
  pkcs12/p12_sbag.c
  pkcs12/p12_utl.c
  pkcs12/p12_npas.c
  pkcs12/pk12err.c
  pkcs12/p12_p8d.c
  pkcs12/p12_p8e.c
  )
list(APPEND pkcs12_srcs
  pkcs12/p12_lcl.h
  )
source_group(pkcs12 FILES ${pkcs12_srcs})
list(APPEND ${lib_name}_libsrcs ${pkcs12_srcs})
####################
# pkcs7
set(pkcs7_srcs # order from crypto/pkcs7/build.info
  pkcs7/build.info
  pkcs7/pk7_asn1.c
  pkcs7/pk7_lib.c
  pkcs7/pkcs7err.c
  pkcs7/pk7_doit.c
  pkcs7/pk7_smime.c
  pkcs7/pk7_attr.c
  pkcs7/pk7_mime.c
  pkcs7/bio_pk7.c
  )
source_group(pkcs7 FILES ${pkcs7_srcs})
list(APPEND ${lib_name}_libsrcs ${pkcs7_srcs})
####################
# poly1305
set(poly1305_srcs # order from crypto/poly1305/build.info
  poly1305/build.info
  poly1305/poly1305_pmeth.c
  poly1305/poly1305_ameth.c
  poly1305/poly1305.c
  )
list(APPEND poly1305_srcs
  poly1305/poly1305_local.h
  )
source_group(poly1305 FILES ${poly1305_srcs})
list(APPEND ${lib_name}_libsrcs ${poly1305_srcs})
##########
set(poly1305_extra # in directory, not in build.info
  poly1305/poly1305_base2_44.c
  poly1305/poly1305_ieee754.c
  )
list(APPEND poly1305_extra # TODO asm
  poly1305/asm/poly1305-armv4.pl
  poly1305/asm/poly1305-armv8.pl
  poly1305/asm/poly1305-c64xplus.pl
  poly1305/asm/poly1305-mips.pl
  poly1305/asm/poly1305-ppcfp.pl
  poly1305/asm/poly1305-ppc.pl
  poly1305/asm/poly1305-s390x.pl
  poly1305/asm/poly1305-sparcv9.pl
  poly1305/asm/poly1305-x86_64.pl
  poly1305/asm/poly1305-x86.pl
  )
list(APPEND ${lib_name}_all ${poly1305_extra})
####################
# rand
set(rand_srcs # order from crypto/rand/build.info
  rand/build.info
  rand/randfile.c
  rand/rand_lib.c
  rand/rand_err.c
  rand/rand_egd.c
  rand/rand_win.c
  rand/rand_unix.c
  rand/rand_vms.c
  rand/drbg_lib.c
  rand/drbg_ctr.c
  )
list(APPEND rand_srcs
  rand/rand_lcl.h
  )
source_group(rand FILES ${rand_srcs})
list(APPEND ${lib_name}_libsrcs ${rand_srcs})
####################
# rc2
set(rc2_srcs # order from crypto/rc2/build.info
  rc2/build.info
  rc2/rc2_ecb.c
  rc2/rc2_skey.c
  rc2/rc2_cbc.c
  rc2/rc2cfb64.c
  rc2/rc2ofb64.c
  )
list(APPEND rc2_srcs
  rc2/rc2_locl.h
  )
source_group(rc2 FILES ${rc2_srcs})
list(APPEND ${lib_name}_libsrcs ${rc2_srcs})
####################
# rc4
set(rc4_srcs
  rc4/build.info
  rc4/rc4_locl.h
  rc4/rc4_enc.c # rc4_asm_src DEFAULT (Configurations/00-base-templates.conf)
  rc4/rc4_skey.c # rc4_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(rc4 FILES ${rc4_srcs})
list(APPEND ${lib_name}_libsrcs ${rc4_srcs})
##########
set(rc4_extra # TODO asm
  rc4/asm/rc4-586.pl
  rc4/asm/rc4-c64xplus.pl
  rc4/asm/rc4-md5-x86_64.pl
  rc4/asm/rc4-parisc.pl
  rc4/asm/rc4-s390x.pl
  rc4/asm/rc4-x86_64.pl
  )
list(APPEND ${lib_name}_all ${rc4_extra})
####################
# rc5
set(rc5_srcs # order from crypto/rc5/build.info
  rc5/build.info
  rc5/rc5_skey.c
  rc5/rc5_ecb.c
  rc5/rc5cfb64.c
  rc5/rc5ofb64.c
  )
list(APPEND rc5_srcs
  rc5/rc5_locl.h
  rc5/rc5_enc.c # rc5_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(rc5 FILES ${rc5_srcs})
list(APPEND ${lib_name}_libsrcs ${rc5_srcs})
##########
set(rc5_extra # TODO asm
  rc5/asm/rc5-586.pl
  )
list(APPEND ${lib_name}_all ${rc5_extra})
####################
# ripemd
set(ripemd_srcs # order from crypto/ripemd/build.info
  ripemd/build.info
  ripemd/rmd_dgst.c
  ripemd/rmd_one.c
  )
list(APPEND ripemd_srcs
  ripemd/rmd_locl.h
  ripemd/rmdconst.h
  )
source_group(ripemd FILES ${ripemd_srcs})
list(APPEND ${lib_name}_libsrcs ${ripemd_srcs})
##########
set(ripemd_extra # TODO asm
  ripemd/asm/rmd-586.pl
  )
list(APPEND ${lib_name}_all ${ripemd_extra})
####################
# rsa
set(rsa_srcs # order from crypto/rsa/build.info
  rsa/build.info
  rsa/rsa_ossl.c
  rsa/rsa_gen.c
  rsa/rsa_lib.c
  rsa/rsa_sign.c
  rsa/rsa_saos.c
  rsa/rsa_err.c
  rsa/rsa_pk1.c
  rsa/rsa_ssl.c
  rsa/rsa_none.c
  rsa/rsa_oaep.c
  rsa/rsa_chk.c
  rsa/rsa_pss.c
  rsa/rsa_x931.c
  rsa/rsa_asn1.c
  rsa/rsa_depr.c
  rsa/rsa_ameth.c
  rsa/rsa_prn.c
  rsa/rsa_pmeth.c
  rsa/rsa_crpt.c
  rsa/rsa_x931g.c
  rsa/rsa_meth.c
  rsa/rsa_mp.c
  )
list(APPEND rsa_srcs
  rsa/rsa_locl.h
  )
source_group(rsa FILES ${rsa_srcs})
list(APPEND ${lib_name}_libsrcs ${rsa_srcs})
####################
# seed
set(seed_srcs # order from crypto/seed/build.info
  seed/build.info
  seed/seed.c
  seed/seed_ecb.c
  seed/seed_cbc.c
  seed/seed_cfb.c
  seed/seed_ofb.c
  )
list(APPEND seed_srcs
  seed/seed_locl.h
  )
source_group(seed FILES ${seed_srcs})
list(APPEND ${lib_name}_libsrcs ${seed_srcs})
####################
# sha
set(sha_srcs # order from crypto/sha/Makefile
  sha/build.info
  sha/sha1dgst.c
  sha/sha1_one.c
  sha/sha256.c
  sha/sha512.c
  )
list(APPEND sha_srcs
  sha/sha_locl.h
  sha/keccak1600.c # keccak1600_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(sha FILES ${sha_srcs})
list(APPEND ${lib_name}_libsrcs ${sha_srcs})
##########
set(sha_extra # TODO asm
  sha/asm/keccak1600-armv4.pl
  sha/asm/keccak1600-armv8.pl
  sha/asm/keccak1600-avx2.pl
  sha/asm/keccak1600-avx512.pl
  sha/asm/keccak1600-avx512vl.pl
  sha/asm/keccak1600-c64x.pl
  sha/asm/keccak1600-mmx.pl
  sha/asm/keccak1600p8-ppc.pl
  sha/asm/keccak1600-ppc64.pl
  sha/asm/keccak1600-s390x.pl
  sha/asm/keccak1600-x86_64.pl
  sha/asm/sha1-586.pl
  sha/asm/sha1-alpha.pl
  sha/asm/sha1-armv4-large.pl
  sha/asm/sha1-armv8.pl
  sha/asm/sha1-c64xplus.pl
  sha/asm/sha1-ia64.pl
  sha/asm/sha1-mb-x86_64.pl
  sha/asm/sha1-mips.pl
  sha/asm/sha1-parisc.pl
  sha/asm/sha1-ppc.pl
  sha/asm/sha1-s390x.pl
  sha/asm/sha1-sparcv9a.pl
  sha/asm/sha1-sparcv9.pl
  sha/asm/sha1-thumb.pl
  sha/asm/sha1-x86_64.pl
  sha/asm/sha256-586.pl
  sha/asm/sha256-armv4.pl
  sha/asm/sha256-c64xplus.pl
  sha/asm/sha256-mb-x86_64.pl
  sha/asm/sha512-586.pl
  sha/asm/sha512-armv4.pl
  sha/asm/sha512-armv8.pl
  sha/asm/sha512-c64xplus.pl
  sha/asm/sha512-ia64.pl
  sha/asm/sha512-mips.pl
  sha/asm/sha512p8-ppc.pl
  sha/asm/sha512-parisc.pl
  sha/asm/sha512-ppc.pl
  sha/asm/sha512-s390x.pl
  sha/asm/sha512-sparcv9.pl
  sha/asm/sha512-x86_64.pl
  )
list(APPEND ${lib_name}_all ${sha_extra})
####################
# siphash
set(siphash_srcs # order from crypto/siphash/build.info
  siphash/build.info
  siphash/siphash.c
  siphash/siphash_pmeth.c
  siphash/siphash_ameth.c
  )
list(APPEND siphash_srcs
  siphash/siphash_local.h
  )
source_group(siphash FILES ${siphash_srcs})
list(APPEND ${lib_name}_libsrcs ${siphash_srcs})
####################
# sm2
set(sm2_srcs # order from crypto/sm2/build.info
  sm2/build.info
  sm2/sm2_sign.c
  sm2/sm2_crypt.c
  sm2/sm2_err.c
  sm2/sm2_pmeth.c
  )
source_group(sm2 FILES ${sm2_srcs})
list(APPEND ${lib_name}_libsrcs ${sm2_srcs})
####################
# sm3
set(sm3_srcs # order from crypto/sm3/build.info
  sm3/build.info
  sm3/sm3.c
  sm3/m_sm3.c
  )
list(APPEND sm3_srcs
  sm3/sm3_locl.h
  )
source_group(sm3 FILES ${sm3_srcs})
list(APPEND ${lib_name}_libsrcs ${sm3_srcs})
####################
# sm4
set(sm4_srcs # order from crypto/sm4/build.info
  sm4/build.info
  sm4/sm4.c
  )
source_group(sm4 FILES ${sm4_srcs})
list(APPEND ${lib_name}_libsrcs ${sm4_srcs})
####################
# srp
set(srp_srcs # order from crypto/srp/build.info
  srp/build.info
  srp/srp_lib.c
  srp/srp_vfy.c
  )
source_group(srp FILES ${srp_srcs})
list(APPEND ${lib_name}_libsrcs ${srp_srcs})
####################
# stack
set(stack_srcs
  stack/build.info
  stack/stack.c
  )
source_group(stack FILES ${stack_srcs})
list(APPEND ${lib_name}_libsrcs ${stack_srcs})
####################
# store
set(store_srcs # order from crypto/store/build.info
  store/build.info
  store/store_err.c
  store/store_init.c
  store/store_lib.c
  store/store_register.c
  store/store_strings.c
  store/loader_file.c
  )
list(APPEND store_srcs
  store/store_locl.h
  )
source_group(store FILES ${store_srcs})
list(APPEND ${lib_name}_libsrcs ${store_srcs})
####################
# ts
set(ts_srcs # order from crypto/ts/build.info
  ts/build.info
  ts/ts_err.c
  ts/ts_req_utils.c
  ts/ts_req_print.c
  ts/ts_rsp_utils.c
  ts/ts_rsp_print.c
  ts/ts_rsp_sign.c
  ts/ts_rsp_verify.c
  ts/ts_verify_ctx.c
  ts/ts_lib.c
  ts/ts_conf.c
  ts/ts_asn1.c
  )
list(APPEND ts_srcs
  ts/ts_lcl.h
  )
source_group(ts FILES ${ts_srcs})
list(APPEND ${lib_name}_libsrcs ${ts_srcs})
####################
# txt_db
set(txt_db_srcs
  txt_db/build.info
  txt_db/txt_db.c
  )
source_group(txt_db FILES ${txt_db_srcs})
list(APPEND ${lib_name}_libsrcs ${txt_db_srcs})
####################
# ui
set(ui_srcs # order from crypto/ui/build.info
  ui/build.info
  ui/ui_err.c
  ui/ui_lib.c
  ui/ui_openssl.c
  ui/ui_null.c
  ui/ui_util.c
  )
list(APPEND ui_srcs
  ui/ui_locl.h
  )
source_group(ui FILES ${ui_srcs})
list(APPEND ${lib_name}_libsrcs ${ui_srcs})
####################
# whrlpool
set(whrlpool_srcs # order from crypto/whrlpool/build.info
  whrlpool/build.info
  whrlpool/wp_dgst.c
  )
list(APPEND whrlpool_srcs
  whrlpool/wp_locl.h
  whrlpool/wp_block.c # wp_asm_src DEFAULT (Configurations/00-base-templates.conf)
  )
source_group(whrlpool FILES ${whrlpool_srcs})
list(APPEND ${lib_name}_libsrcs ${whrlpool_srcs})
##########
set(whrlpool_extra # TODO asm
  whrlpool/asm/wp-mmx.pl
  whrlpool/asm/wp-x86_64.pl
  )
list(APPEND ${lib_name}_all ${whrlpool_extra})
####################
# x509
set(x509_srcs # order from crypto/x509/build.info
  x509/build.info
  x509/x509_def.c
  x509/x509_d2.c
  x509/x509_r2x.c
  x509/x509_cmp.c
  x509/x509_obj.c
  x509/x509_req.c
  x509/x509spki.c
  x509/x509_vfy.c
  x509/x509_set.c
  x509/x509cset.c
  x509/x509rset.c
  x509/x509_err.c
  x509/x509name.c
  x509/x509_v3.c
  x509/x509_ext.c
  x509/x509_att.c
  x509/x509type.c
  x509/x509_meth.c
  x509/x509_lu.c
  x509/x_all.c
  x509/x509_txt.c
  x509/x509_trs.c
  x509/by_file.c
  x509/by_dir.c
  x509/x509_vpm.c
  x509/x_crl.c
  x509/t_crl.c
  x509/x_req.c
  x509/t_req.c
  x509/x_x509.c
  x509/t_x509.c
  x509/x_pubkey.c
  x509/x_x509a.c
  x509/x_attrib.c
  x509/x_exten.c
  x509/x_name.c
  )
list(APPEND x509_srcs
  x509/x509_lcl.h
  )
source_group(x509 FILES ${x509_srcs})
list(APPEND ${lib_name}_libsrcs ${x509_srcs})
####################
# x509v3
set(x509v3_srcs # order from crypto/x509v3/build.info
  x509v3/build.info
  x509v3/v3_bcons.c
  x509v3/v3_bitst.c
  x509v3/v3_conf.c
  x509v3/v3_extku.c
  x509v3/v3_ia5.c
  x509v3/v3_lib.c
  x509v3/v3_prn.c
  x509v3/v3_utl.c
  x509v3/v3err.c
  x509v3/v3_genn.c
  x509v3/v3_alt.c
  x509v3/v3_skey.c
  x509v3/v3_akey.c
  x509v3/v3_pku.c
  x509v3/v3_int.c
  x509v3/v3_enum.c
  x509v3/v3_sxnet.c
  x509v3/v3_cpols.c
  x509v3/v3_crld.c
  x509v3/v3_purp.c
  x509v3/v3_info.c
  x509v3/v3_akeya.c
  x509v3/v3_pmaps.c
  x509v3/v3_pcons.c
  x509v3/v3_ncons.c
  x509v3/v3_pcia.c
  x509v3/v3_pci.c
  x509v3/pcy_cache.c
  x509v3/pcy_node.c
  x509v3/pcy_data.c
  x509v3/pcy_map.c
  x509v3/pcy_tree.c
  x509v3/pcy_lib.c
  x509v3/v3_asid.c
  x509v3/v3_addr.c
  x509v3/v3_tlsf.c
  x509v3/v3_admis.c
  )
list(APPEND x509v3_srcs
  x509v3/ext_dat.h
  x509v3/pcy_int.h
  x509v3/standard_exts.h
  x509v3/v3_admis.h
  )
source_group(x509v3 FILES ${x509v3_srcs})
list(APPEND ${lib_name}_libsrcs ${x509v3_srcs})
########################################
add_library(${lib_name} STATIC ${${lib_name}_libsrcs})
target_include_directories(${lib_name} PRIVATE
  ${CMAKE_CURRENT_SOURCE_DIR}/include
  ${CMAKE_CURRENT_BINARY_DIR}/include # buildinf.h, internal/[bn|dso]_conf.h
  ec/curve448
  ec/curve448/arch_32
  modes # evp includes modes_lcl.h
  PUBLIC
  $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/include${verDir}>
  )
target_compile_definitions(${lib_name} PUBLIC $<INSTALL_INTERFACE:OPENSSL_API_COMPAT=0x10100000L>)
set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
target_link_libraries(${lib_name} PUBLIC $<BUILD_INTERFACE:include> PRIVATE Threads::Threads ${CMAKE_DL_LIBS})
include(CheckLibraryExists)
check_library_exists(ws2_32 getch "" CRYPTO_HAS_WS2_32)
if(CRYPTO_HAS_WS2_32)
  target_link_libraries(${lib_name} PRIVATE ws2_32)
endif()
set_target_properties(${lib_name} PROPERTIES OUTPUT_NAME ${lib_name}${ver})
########################################
install(TARGETS ${lib_name} EXPORT ${targetsFile}
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
  )
########################################
list(APPEND ${lib_name}_all ${${lib_name}_libsrcs})
list(REMOVE_ITEM ${lib_name}_all
  ${CMAKE_CURRENT_BINARY_DIR}/include/buildinf.h
  ${CMAKE_CURRENT_BINARY_DIR}/include/internal/bn_conf.h
  ${CMAKE_CURRENT_BINARY_DIR}/include/internal/dso_conf.h
  )
compareCmakeFilesys("${${lib_name}_all}")
